version: '3'

x-app: &app
  build:
    context: .
    args:
      UID: ${UID}
      GID: ${GID}
  env_file:
    - docker-compose.env
  environment:
    PHP_CLI_MEMORY_LIMIT: "1024M"
  ports:
    - "8080"
  volumes:
    - ./:/var/www/app
  restart: on-failure
  networks:
      - frontend

services:
  app:
    <<: *app
    command: ["rr", "serve", "-c", ".rr.dev.yaml"]

  xdebug:
    <<: *app
    command: ["rr", "serve", "-c", ".rr.dev.yaml"]
    profiles: ["xdebug"]
    env_file:
      - docker-compose.env
      - .env.xdebug
    extra_hosts:
      # https://stackoverflow.com/a/67158212
      # only works with Docker v20.10+
      - "host.docker.internal:host-gateway"

  test:
    <<: *app
    command: ["composer", "run", "test"]
    profiles:
      - test
    env_file:
      - docker-compose.env
      - .env.test

###> doctrine/doctrine-bundle ###
  database:
    image: mysql:5.7
    environment:
       container_name: databasse 
       MYSQL_DATABASE: medtn
       MYSQL_ROOT_PASSWORD: MYSQL_ALLOW_EMPTY_PASSWORD=1
       MYSQL_USER: root
       MYSQL_PASSWORD: null
      
    ports:
      - '4306:3306'  
    volumes:
      - db-data:/var/lib/mysql
    restart: always
    networks:
      - frontend
  phpmyadmin:
        depends_on:
            - database
        image: phpmyadmin
        restart: always
        ports:
            - 8080:80
        environment:
            PMA_HOST: database
        networks:
            - frontend
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
networks:
  frontend:
volumes:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
